buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/' //阿里云仓库
        }
        maven { url 'https://maven.aliyun.com/repository/central'}
        maven {
            name = 'Forge'
            url = 'https://maven.minecraftforge.net'
        }
        mavenLocal()
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.16.5-1.6'
group = 'com.github.yuoft' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Endless'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
//    mappings channel: 'official', version: '1.16.5'
    mappings channel: 'snapshot', version: '20210309-1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap','true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=endless.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                endless {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap','true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=endless.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                endless {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap','true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=endless.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'endless', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                endless {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

mixin {
    //指定refmap.json文件生成位置
    add sourceSets.main, "endless.refmap.json"
}

//引入仓库
repositories {
    maven {
        name = "CurseMaven"
        url "https://www.cursemaven.com"
    }
    maven {
        name = "JEI"
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "Botania and CraftTweaker"
        url('https://maven.blamejared.com')
    }
    maven {
        name = "CCL"
        url('https://maven.covers1624.net/')
    }
    maven {
        name = "curios"
        url "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }
    maven {
        name = 'Draconic-Evolution'
        url = "https://squiddev.cc/maven/"
    }
    maven {
        name = 'Twilight Forest'
        url('https://modmaven.dev/')
    }
    maven {
        name = 'Create'
        url = "https://maven.tterrag.com"
    }
    maven {
        name 'RS maven'
        url 'https://repo.refinedmods.com'
    }
    maven {
        // Shedaniel's maven (Architectury API)
        url "https://maven.shedaniel.me/"
        content {
            includeGroup "me.shedaniel"
        }
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.ftb.mods"
        }
    }
    //声明本地存储库
    flatDir {
        dirs('libs')
    }
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'

    compileOnly("mezz.jei:jei-${mc_ver}:${jei_ver}") //引入mod API

    compileOnly("com.yuo.spacearms:spacearms:${mc_ver}-${spaceArms_ver}") //联动
    compileOnly("com.yuo.orecrop:orecrop:${mc_ver}-${oreCrop_ver}")
    compileOnly("com.yuo.paimeng:paimeng:${mc_ver}-${paiMeng_ver}")
    compileOnly("com.yuo.enchants:yuomoreenchants:${mc_ver}-${yuoEnchants_ver}")
    compileOnly("com.yuo.morecoal:morecoal:${mc_ver}-${moreCoal_ver}")
    compileOnly("vazkii.botania:Botania:${mc_ver}-${botania_ver}")
    compileOnly("java.codechicken:CodeChickenLib:1.16.5-4.0.7.445-universal")

    compileOnly("com.github.alexthe666.iceandfire:iceandfire:${iceandfire_ver}-${mc_ver}")
    compileOnly("com.blamejared.crafttweaker:CraftTweaker-${mc_ver}:${crt_ver}")
    compileOnly("appeng:appliedenergistics2:${ae2_ver}")
    compileOnly("com.brandon3055.draconicevolution:Draconic-Evolution:${mc_ver}-${de_ver}-universal")
    compileOnly("java.moze_intel:projecte:${mc_ver}-${projecte_ver}")
    compileOnly("teamtwilight:twilightforest:${tf_ver}:universal")
    compileOnly("com.simibubi.create:Create:mc${mc_ver}_${create_ver}")
    compileOnly("curse.maven:advent-of-ascension-nevermine-311054:3826879")
    compileOnly("curse.maven:astral-sorcery-241721:3813365")
    compileOnly("curse.maven:slashblade-241596:3422103")
    compileOnly("curse.maven:mystical-agriculture-246640:3562127")
    compileOnly("curse.maven:cofh-core-69162:3788884")
    compileOnly("curse.maven:thermal-foundation-222880:3788893")
    compileOnly("curse.maven:refinedstorage-243076:3630064")
    compileOnly("curse.maven:StorageDrawers-223852:3776277")
    compileOnly("slimeknights.mantle:Mantle:${mc_ver}-${mantle_ver}")
    compileOnly("slimeknights.tconstruct:TConstruct:${mc_ver}-${tconstruct_ver}")
    compileOnly("curse.maven:jade-324717:3910873")
    compileOnly("top.theillusivec4.curios:curios-forge:${mc_ver}-${curios_ver}")
    compileOnly("dev.latvian.mods:kubejs-forge:${kubejs_ver}")
    compileOnly("dev.latvian.mods:rhino-forge:${rhino_ver}")

//    runtimeOnly fg.deobf("com.teamcofh:cofh_core:1.16.5-1.5.0.+")
//    runtimeOnly fg.deobf("com.teamcofh:thermal_foundation:1.16.5-1.5.0.+")
//    runtimeOnly fg.deobf("curse.maven:brandons-core-231382:3775813")
//    runtimeOnly fg.deobf("java.codechicken:CodeChickenLib:1.16.5-4.0.7.445-universal")
//    runtimeOnly fg.deobf("curse.maven:draconic-evolution-223565:3779345")
//    runtimeOnly fg.deobf("com.yuo.spacearms:spacearms:1.16.5-1.3.7")
//    runtimeOnly fg.deobf("com.yuo.orecrop:orecrop:1.16.5-1.2.5")
//    runtimeOnly fg.deobf("com.yuo.paimeng:paimeng:1.16.5-1.1.5")
//    runtimeOnly fg.deobf("com.yuo.moreenchants:moreenchants:1.16.5-1.3.0")
//    runtimeOnly fg.deobf("com.yuo.morecoal:morecoal:1.16.5-1.0.0")
//    runtimeOnly fg.deobf("com.github.alexthe666.citadel:citadel:1.8.1-1.16.5") //bug minix
//    runtimeOnly fg.deobf("com.github.alexthe666.iceandfire:iceandfire:${iceandfire_ver}-${mc_ver}")
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${mc_ver}-${curios_ver}")
//    runtimeOnly fg.deobf('vazkii.patchouli:Patchouli:1.16.4-53.2')
//    runtimeOnly fg.deobf("vazkii.botania:Botania:1.16.5-420.3")
    runtimeOnly fg.deobf("curse.maven:jei-238222:3681294") //引入mod
//    runtimeOnly fg.deobf("com.yuo.spacearms:spacearms:${mc_ver}-${spaceArms_ver}")
    runtimeOnly fg.deobf("curse.maven:torohealth-damage-indicators-245733:3144151")
//    runtimeOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-${mc_ver}:${crt_ver}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:3910873")
//    runtimeOnly fg.deobf("curse.maven:mob-grinding-utils-254241:4368330")
//    implementation fg.deobf("me.shedaniel:architectury-forge:${architectury_ver}")
//    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_ver}")
//    implementation fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_ver}")
//    runtimeOnly fg.deobf("curse.maven:apotheosis-313970:3936649")
//    runtimeOnly fg.deobf("curse.maven:placebo-283644:4501015")
//    runtimeOnly fg.deobf("slimeknights.mantle:Mantle:${mc_ver}-1.6.158")
//    runtimeOnly fg.deobf("slimeknights.tconstruct:TConstruct:${mc_ver}-${tconstruct_ver}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "endless",
            "Specification-Vendor": "yuoft",
            "Specification-Version": "1.5.8", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"yuoft",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs" : "endless.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
